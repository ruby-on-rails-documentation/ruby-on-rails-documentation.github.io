(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{280:function(e,t,s){"use strict";s.r(t);var o=s(13),n=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"request-lifecycle"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#request-lifecycle"}},[e._v("#")]),e._v(" Request Lifecycle")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Introduction")]),e._v(" "),t("p",[e._v('When using any tool in the "real world", you feel more confident if you understand how that tool works. Application development is no different. When you understand how your development tools function, you feel more comfortable and confident using them.')]),e._v(" "),t("p",[e._v("The goal of this document is to give you a good, high-level overview of how the Rails framework works. By getting to know the overall framework better, everything feels less \"magical\" and you will be more confident building your applications. If you don't understand all of the terms right away, don't lose heart! Just try to get a basic grasp of what is going on, and your knowledge will grow as you explore other sections of the documentation.")])]),e._v(" "),t("li",[t("p",[t("strong",[t("strong",[e._v("Rails application’s entry point")])])]),e._v(" "),t("p",[e._v("The config.ru consists of the two lines of code:")]),e._v(" "),t("div",{staticClass:"language-ruby line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[e._v("require_relative "),t("span",{pre:!0,attrs:{class:"token string-literal"}},[t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'config/environment'")])]),e._v("\n\nrun Rails"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("application\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("The first line loads the config/environment.rb file, and in the second line, we are passing the instance of our application to the run method that is available out of the box. If you named your application as Guestbook, then the instance of your application would come as Guestbook::Application.")]),e._v(" "),t("p",[e._v("Then the run method is provided by Rack - API for Ruby frameworks to communicate with web servers. Rack informs the web application about the request using the call method.")]),e._v(" "),t("p",[e._v("The call method implemented by the web application has to accept one argument, the env hash and has to return an array with three elements - status, headers, and response body.")])]),e._v(" "),t("li",[t("p",[t("strong",[t("strong",[e._v("In the middle of the request process")])])]),e._v(" "),t("p",[e._v("We are in the middle of the request process - the server accepted the request and passed it to the application. It’s a perfect moment to mention the middleware.")]),e._v(" "),t("p",[e._v("The middleware, as the name suggests, is a code that is executed in the middle.")]),e._v(" "),t("p",[e._v("You can see the list of middlewares used by Rails by using the following command:")]),e._v(" "),t("div",{staticClass:"language-ruby line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ruby"}},[t("code",[e._v("bin"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("rails middleware\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("The list is quite long. One of the middlewares that are shipped with Rails by the default is ActionDispatch::RequestId. If we would look into the source of that class, we would see that it implements the call method that accepts the env hash - just like Rack expects the middleware class to implement.")]),e._v(" "),t("p",[e._v("The initializer of the class also accepts the header argument. If this argument is passed, it looks for this header values as a request id; otherwise, it generates a unique string using SecureRandom.uuid method.")]),e._v(" "),t("p",[e._v("The last position on the middlewares list is Guestbook::Application.routes (if you named your application as Guestbook) - this is where our application is triggered.")])]),e._v(" "),t("li",[t("p",[t("strong",[t("strong",[e._v("Routes")])])]),e._v(" "),t("p",[e._v("Because the run method is invoked on Guest::Application.routes instance, this class implements the call method. Let’s take a closer look at it.")]),e._v(" "),t("p",[e._v("Guest::Application.routes returns instance of ActionDispatch::Routing::RouteSet class. This class is responsible for matching the request path with routes defined in the config/routes.rb file.")]),e._v(" "),t("p",[e._v("When the route is matched, the new instance of the controller is created, and the action method is invoked. Before it happens, the request and response objects are saved because they must be available in any place of the controller.")]),e._v(" "),t("p",[e._v("After the controller’s action is executed, the flash message is set if needed, and the response array is returned.")])]),e._v(" "),t("li",[t("p",[t("strong",[t("strong",[e._v("Controller’s middleware")])])]),e._v(" "),t("p",[e._v("We already discussed the middleware, but since we are talking about the controller structure, it is worth mentioning that each controller can have its list of middlewares.")]),e._v(" "),t("p",[e._v("The same rules apply as before - our middleware class has to implement the call method that takes the env hash as an argument, and the initialize method has to accept the app argument and optional arguments for configuration purposes")])]),e._v(" "),t("li",[t("p",[t("strong",[t("strong",[e._v("A moment before rendering")])])]),e._v(" "),t("p",[e._v("I mentioned that before the action is rendered, response and request object are saved to be accessible in the controller. It happens in the dispatch method from the ActionController::Metal class")]),e._v(" "),t("p",[e._v("The most exciting part of this method is the execution of the process method. This method is also defined in multiple ancestors from our controller class.")]),e._v(" "),t("p",[e._v("If you would like to list all ancestors for the given controller, you can do it via UsersController.ancestors.")])]),e._v(" "),t("li",[t("p",[t("strong",[t("strong",[e._v("Rendering")])])]),e._v(" "),t("p",[e._v("The final step in the request cycle is the rendering of the view for the action. The result of rendering is stored in the response.body variable.")]),e._v(" "),t("p",[e._v("As you may remember, the response array contains three objects: response code, response body, and headers. The content-type header depends on the kind of view, and the response code depends on whether the given action was found and the request was accepted. The rendering itself is a larger topic and deserves its article so that I won’t go more in-depth right now.")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);